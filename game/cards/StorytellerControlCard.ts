import { $card, Card } from '../utils/card';
import { GAME } from '../../bot';
import { Phase } from '../session';
import type { CValue } from '../utils/state';
import type { ActionGroup } from '../../templates/types';
import { LOCATION_BUTTONS } from '../consts';

interface Props {
  name: CValue<string>;
  invite: CValue<string>;
  phase: CValue<Phase>;
  storytellerId: CValue<string>;
}

/**
 * ËØ¥‰π¶‰∫∫ÊéßÂà∂Âè∞Âç°Áâá
 */
class CardRenderer extends Card<Props> {
  render(state: Props) {
    let status: string = '';
    let mode: string = '';
    let icon = state.phase.value === Phase.NIGHT ? 'üå†' : 'üåÖ';
    let image = GAME.assets['banner_day'];

    const groups: ActionGroup[] = [];

    switch (state.phase.value) {
      case Phase.WAITING_FOR_STORYTELLER:
        mode = `(font)Á≠âÂæÖËØ¥‰π¶‰∫∫(font)[secondary]`;
        status = `Â∑≤ÂàõÂª∫${state.name.value}ÔºåËØ∑ËØ¥‰π¶‰∫∫‰ΩøÁî®[ÈÇÄËØ∑ÈìæÊé•](${state.invite.value})Âä†ÂÖ•ËØ≠Èü≥\n(font)Âä†ÂÖ•ÂêéËØ∑ÂõûÂà∞Ëøô‰∏™È¢ëÈÅìËøõË°åÂêéÁª≠Êìç‰Ωú(font)[warning]`;
        break;
      case Phase.FINISH_GOOD:
      case Phase.FINISH_BAD:
      case Phase.PREPARING:
        switch (state.phase.value) {
          case Phase.FINISH_GOOD:
            mode = `(font)Ê∏∏ÊàèÁªìÊùü -(font)[secondary] (font)ÂñÑËâØÈòµËê•ËÉúÂà©(font)[info]`;
            status = 'Ê∏∏ÊàèÂ∑≤ÁªìÊùü\n(font)Áé©ÂÆ∂ÁöÑÊâòÊ¢¶Êï∞ÊçÆ‰∏éÂ≠òÊ¥ªÁä∂ÊÄÅÂ∑≤Ë¢´ÈáçÁΩÆ(font)[warning]';
            image = GAME.assets['banner_good'];
            break;
          case Phase.FINISH_BAD:
            mode = `(font)Ê∏∏ÊàèÁªìÊùü -(font)[secondary] (font)ÈÇ™ÊÅ∂ÈòµËê•ËÉúÂà©(font)[danger]`;
            status = 'Ê∏∏ÊàèÂ∑≤ÁªìÊùü\n(font)Áé©ÂÆ∂ÁöÑÊâòÊ¢¶Êï∞ÊçÆ‰∏éÂ≠òÊ¥ªÁä∂ÊÄÅÂ∑≤Ë¢´ÈáçÁΩÆ(font)[warning]';
            image = GAME.assets['banner_bad'];
            break;
          default:
            mode = `(font)ÂáÜÂ§áÈò∂ÊÆµ(font)[secondary]`;
            status =
              'Â∞èÈïáÂ∑≤Â∞±Áª™ÔºåÂú®È¢ëÈÅì‰∏≠ÂèëÈÄÅÁöÑÂÜÖÂÆπÂ∞ÜËΩ¨ÂèëÁªôÊâÄÊúâÁé©ÂÆ∂\n(font)Âª∫ËÆÆÂà©Áî®Áé∞Âú®Ëøô‰∏™Êó∂Êú∫ÂêëÁé©ÂÆ∂ÂèëÈÄÅÂâßÊú¨ÂíåÈúÄË¶ÅËß£ÈáäÁöÑËßÑÂàôÁ≠â(font)[warning]';
            break;
        }
        groups.push([
          { text: 'üå† ÂºÄÂßã', theme: 'info', value: '[st]GameStart' },
          { text: '„ÄÄ', theme: 'secondary' },
          state.phase.value == Phase.FINISH_GOOD
            ? { text: '„ÄÄ', theme: 'secondary' }
            : { text: 'Â•Ω‰∫∫ËÉúÂà©', theme: 'info', value: '[st]GameRestart|good' },
          state.phase.value == Phase.FINISH_BAD
            ? { text: '„ÄÄ', theme: 'secondary' }
            : { text: 'Âùè‰∫∫ËÉúÂà©', theme: 'danger', value: '[st]GameRestart|bad' },
        ]);
        break;
      case Phase.NIGHT:
        mode = `(font)Â§úÊôöÈò∂ÊÆµ(font)[secondary]`;
        status =
          'ÂüéÈïáÂπøÂú∫Á©∫Êó†‰∏Ä‰∫∫ÔºåÈïáÊ∞ëÂõûÂà∞ÂêÑËá™Â∞èÂ±ãÁù°Ëßâ‰∫Ü\n(font)‰ΩøÁî®ÊâòÊ¢¶ÂäüËÉΩ‰∏∫ÈïáÊ∞ëÊèê‰æõ‰ø°ÊÅØÔºå‰∫¶ÂèØÂâçÂæÄÂ∞èÂ±ã‰∏éÈïáÊ∞ëËØ≠Èü≥(font)[warning]';
        image = GAME.assets['banner_night'];
        groups.push([
          { text: 'üåÖ ÈªéÊòé', theme: 'info', value: '[st]GameDay' },
          { text: '„ÄÄ', theme: 'secondary' },
          { text: 'Â•Ω‰∫∫ËÉúÂà©', theme: 'info', value: '[st]GameRestart|good' },
          { text: 'Âùè‰∫∫ËÉúÂà©', theme: 'danger', value: '[st]GameRestart|bad' },
        ]);
        break;
      case Phase.DAY:
        mode = `(font)ÁôΩÂ§©Èò∂ÊÆµ - ÂπøÂú∫ÈõÜ‰ºö(font)[secondary]`;
        status = 'ÈïáÊ∞ëËÅöÈõÜÂú®ÂπøÂú∫‰∏≠\n(font)‰ΩøÁî®ÂèëËµ∑ÊäïÁ•®ÂäüËÉΩÂèØÂèëËµ∑ÊèêÂêç(font)[warning]';
        groups.push([
          { text: 'üå† Â§úÂπï', theme: 'info', value: '[st]GameNight' },
          { text: 'Ëá™Áî±Ê¥ªÂä®', theme: 'success', value: '[st]GameRoaming' },
          { text: 'Â•Ω‰∫∫ËÉúÂà©', theme: 'info', value: '[st]GameRestart|good' },
          { text: 'Âùè‰∫∫ËÉúÂà©', theme: 'danger', value: '[st]GameRestart|bad' },
        ]);
        break;
      case Phase.ROAMING:
        mode = `(font)ÁôΩÂ§©Èò∂ÊÆµ - Ëá™Áî±Ê¥ªÂä®(font)[secondary]`;
        status =
          'Áé∞Âú®ÊòØËá™Áî±Ê¥ªÂä®Êó∂Èó¥\n(font)‰Ω†ÂíåÈïáÊ∞ë‰∏ÄÊ†∑ÂèØ‰ª•ÂâçÂæÄÂêÑÂú∞ÔºåÂêåÊó∂‰Ω†ËøòÂèØ‰ª•ÂâçÂæÄÁé©ÂÆ∂Â∞èÂ±ã(font)[warning]';
        image = GAME.assets['banner_roam'];
        groups.push([
          { text: 'üå† Â§úÂπï', theme: 'info', value: '[st]GameNight' },
          { text: 'ÂπøÂú∫ÈõÜ‰ºö', theme: 'warning', value: '[st]GameDay' },
          { text: 'Â•Ω‰∫∫ËÉúÂà©', theme: 'info', value: '[st]GameRestart|good' },
          { text: 'Âùè‰∫∫ËÉúÂà©', theme: 'danger', value: '[st]GameRestart|bad' },
        ]);
        groups.push(...LOCATION_BUTTONS);
        break;
    }

    return {
      content: JSON.stringify({
        image,
        status: `**(font)${icon} ËØ¥‰π¶‰∫∫ÊéßÂà∂Âè∞(font)[warning]** ${mode}\n${status}`,
        groups: groups,
      }),
      template_id: GAME.templates.storyteller,
    };
  }
}

export default (state: Props) => $card(new CardRenderer(state));
