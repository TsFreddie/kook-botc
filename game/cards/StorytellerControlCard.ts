import { $card, Card } from '../utils/card';
import { GAME } from '../../bot';
import { Phase } from '../session';
import type { CValue } from '../utils/state';
import type { ActionGroup } from '../../templates/types';
import { LOCATION_BUTTONS } from '../consts';

interface Props {
  name: CValue<string>;
  invite: CValue<string>;
  phase: CValue<Phase>;
  storytellerId: CValue<string>;
}

/**
 * ËØ¥‰π¶‰∫∫ÊéßÂà∂Âè∞Âç°Áâá
 */
class CardRenderer extends Card<Props> {
  render(state: Props) {
    let status: string = '';
    let mode: string = '';
    let met: string = '';
    let icon = state.phase.value === Phase.NIGHT ? 'üå†' : 'üåÖ';
    let image = GAME.assets[state.phase.value === Phase.NIGHT ? 'night' : 'day'];

    const groups: ActionGroup[] = [];

    switch (state.phase.value) {
      case Phase.WAITING_FOR_STORYTELLER:
        mode = `Á≠âÂæÖËØ¥‰π¶‰∫∫`;
        status = `Â∑≤ÂàõÂª∫${state.name.value}ÔºåËØ∑ËØ¥‰π¶‰∫∫‰ΩøÁî®[ÈÇÄËØ∑ÈìæÊé•](${state.invite.value})Âä†ÂÖ•ËØ≠Èü≥\n(font)Âä†ÂÖ•ÂêéËØ∑ÂõûÂà∞Ëøô‰∏™È¢ëÈÅìËøõË°åÂêéÁª≠Êìç‰Ωú(font)[warning]`;
        break;
      case Phase.PREPARING:
        mode = `ÂáÜÂ§áÈò∂ÊÆµ`;
        met = ` (met)${state.storytellerId.value}(met)`;
        status =
          'Â∞èÈïáÂ∑≤Â∞±Áª™ÔºåÂú®È¢ëÈÅì‰∏≠ÂèëÈÄÅÁöÑÂÜÖÂÆπÂ∞ÜËΩ¨ÂèëÁªôÊâÄÊúâÁé©ÂÆ∂\n(font)Âª∫ËÆÆÂà©Áî®Áé∞Âú®Ëøô‰∏™Êó∂Êú∫ÂêëÁé©ÂÆ∂ÂèëÈÄÅÂâßÊú¨ÂíåÈúÄË¶ÅËß£ÈáäÁöÑËßÑÂàôÁ≠â(font)[warning]';
        groups.push([{ text: '‚≠ê ÂºÄÂßãÊ∏∏Êàè', theme: 'info', value: '[st]GameStart' }]);
        break;
      case Phase.NIGHT:
        mode = `Â§úÊôöÈò∂ÊÆµ`;
        status =
          'ÂüéÈïáÂπøÂú∫Á©∫Êó†‰∏Ä‰∫∫ÔºåÈïáÊ∞ëÂõûÂà∞ÂêÑËá™Â∞èÂ±ãÁù°Ëßâ‰∫Ü\n(font)‰ΩøÁî®ÊâòÊ¢¶ÂäüËÉΩ‰∏∫ÈïáÊ∞ëÊèê‰æõ‰ø°ÊÅØÔºå‰∫¶ÂèØÂâçÂæÄÂ∞èÂ±ã‰∏éÈïáÊ∞ëËØ≠Èü≥(font)[warning]';
        groups.push([{ text: 'üåÖ ÈªéÊòé', theme: 'info', value: '[st]GameDay' }]);
        break;
      case Phase.DAY:
        mode = `ÁôΩÂ§©Èò∂ÊÆµ - ÂπøÂú∫ÈõÜ‰ºö`;
        status = 'ÈïáÊ∞ëËÅöÈõÜÂú®ÂπøÂú∫‰∏≠\n(font)‰ΩøÁî®ÂèëËµ∑ÊäïÁ•®ÂäüËÉΩÂèØÂèëËµ∑ÊèêÂêç(font)[warning]';
        groups.push([
          { text: 'üå† Â§úÂπï', theme: 'info', value: '[st]GameNight' },
          { text: 'Ëá™Áî±Ê¥ªÂä®', theme: 'primary', value: '[st]GameRoaming' },
        ]);
        break;
      case Phase.ROAMING:
        mode = `ÁôΩÂ§©Èò∂ÊÆµ - Ëá™Áî±Ê¥ªÂä®`;
        status =
          'Áé∞Âú®ÊòØËá™Áî±Ê¥ªÂä®Êó∂Èó¥\n(font)‰Ω†ÂíåÈïáÊ∞ë‰∏ÄÊ†∑ÂèØ‰ª•ÂâçÂæÄÂêÑÂú∞ÔºåÂêåÊó∂‰Ω†ËøòÂèØ‰ª•ÂâçÂæÄÁé©ÂÆ∂Â∞èÂ±ã(font)[warning]';
        groups.push([
          { text: 'üå† Â§úÂπï', theme: 'info', value: '[st]GameNight' },
          { text: 'ÂπøÂú∫ÈõÜ‰ºö', theme: 'warning', value: '[st]GameDay' },
        ]);
        groups.push(...LOCATION_BUTTONS);
        break;
    }

    return {
      content: JSON.stringify({
        image,
        status: `**(font)${icon} ËØ¥‰π¶‰∫∫ÊéßÂà∂Âè∞(font)[warning]** (font)${mode}(font)[secondary]${met}\n${status}`,
        groups: groups,
      }),
      template_id: GAME.templates.storyteller,
    };
  }
}

export default (state: Props) => $card(new CardRenderer(state));
